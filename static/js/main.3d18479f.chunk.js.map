{"version":3,"sources":["Components/AddTaskForm.js","Components/TaskList/TaskList.js","Components/assets/logo.jpg","Stores/StoreIdentifier.js","Components/Header/index.js","Components/Task/index.js","Pages/Task/TaskPage.js","Pages/Login/LoginPage.js","Stores/todoStore.js","Services/httpService.js","Services/taskService/taskService.js","Stores/taskStore.js","Services/authService/authService.js","Stores/authStore.js","App.js","Stores/StoreInitializer.js","index.js"],"names":["Option","Select","AddTaskForm","props","onSubmit","onCancel","isModalVisible","useState","title","setTitle","description","setDescription","selectedDepartment","setSelectedDepartment","visible","onOk","e","id","Math","floor","random","department","type","placeholder","value","onChange","target","autoComplete","style","height","width","defaultValue","TaskList","Stores","TodoStore","TaskStore","AuthStore","inject","observer","isRedirect","setIsRedirect","a","console","log","key","taskStore","resetData","getAll","localStorage","removeItem","menu","onClick","Item","icon","to","className","span","display","alignItems","margin","justifyContent","overlay","name","size","src","preview","logo","Task","myDepartmentId","taskData","onFinish","onEdit","onReject","status","color","_renderTag","assignedDepartment","disabled","shape","danger","marginRight","backgroundColor","TabPane","Tabs","setIsModalVisible","isLoading","setIsLoading","authStore","getSessionInformation","setTimeout","useEffect","getSession","getAllTasks","addTask","task","create","selectTask","rejectTask","completedTask","session","defaultActiveKey","tab","tasks","map","index","pendingTasks","completedTasks","rejectedTasks","fontSize","email","setEmail","login","undefined","res","setItem","payload","jwtToken","testCounter","addCounter","newTask","push","makeAutoObservable","this","qs","require","http","axios","baseURL","timeout","paramsSerializer","params","stringify","encode","interceptors","request","use","config","getItem","headers","common","error","Promise","reject","response","taskInput","post","result","data","get","selectedTask","user","removeTask","removeArr","filter","todo","taskService","taskGroups","find","x","findTaskIndex","findIndex","preData","Array","from","pasyload","forEach","item","loginInput","authService","PrivateRoute","children","rest","render","PublicRoute","App","stores","todoStore","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d18479f.chunk.js","sourcesContent":["import React ,{useState} from 'react'\r\nimport { Modal,Input,Select  } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nfunction AddTaskForm(props ) {\r\n    const {onSubmit,onCancel,isModalVisible}  = props;\r\n    const [title,setTitle] = useState('');\r\n    const [description,setDescription] = useState('');\r\n    const [selectedDepartment,setSelectedDepartment] = useState(\"1\");\r\n\r\n    const handleSubmit = e => {\r\n\r\n        onSubmit({\r\n            id: Math.floor(Math.random() *10000),\r\n            title:title,\r\n            description:description,\r\n            department:selectedDepartment\r\n        });\r\n\r\n        setTitle('');\r\n        setDescription('');\r\n    };\r\n\r\n    const cancel = () => {\r\n        setTitle(\"\");\r\n        onCancel();\r\n    }\r\n\r\n\r\n    function departmentHandleChange(value) {\r\n        setSelectedDepartment(value);\r\n    }\r\n\r\n    return (\r\n        <Modal title=\"New Task\" visible={isModalVisible} onOk={handleSubmit} onCancel={cancel}>\r\n            <Input type=\"text\" placeholder=\"title\" id=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} autoComplete=\"off\"></Input> \r\n            <div style={{height:10}} />\r\n            <Input type=\"text\" placeholder=\"description\" id=\"title\" value={description} onChange={(e) => setDescription(e.target.value)} autoComplete=\"off\"></Input>   \r\n            <div style={{height:10}} />\r\n            <Select onChange={departmentHandleChange} style={{width:\"100%\"}} defaultValue=\"1\">\r\n        <Option value=\"1\">Department 1</Option>\r\n        <Option value=\"2\">Department 2</Option>\r\n    </Select>                 \r\n       </Modal>\r\n    )\r\n}\r\n\r\n\r\nexport default AddTaskForm;\r\n","import React ,{useState,useEffect} from 'react';\r\n\r\nfunction TaskList( props ) {\r\n    const {removeTask , updateTaks} = props;\r\n    const [data,setData] = useState(props.tasks);\r\n    useEffect(() => {\r\n        console.log(\"Değiştiii\");\r\n        setData(props.data);\r\n    }, [props.tasks])\r\n     \r\n    const [edit,setEdit] = useState ({\r\n        id:null,\r\n        value:''\r\n    })\r\n\r\n   const submitUpdate = value => {\r\n       updateTaks(edit.id,value)\r\n       setEdit({\r\n           id:null,\r\n           value:''\r\n       })\r\n   } \r\n    \r\n    if(data === undefined) return null;\r\n\r\n    return data.map((task,index) =>(\r\n        <div className=\"deneme\" key={index}>{task.text}\r\n        <button className=\"bt\" onClick={()=> removeTask(task.id)}>Delete</button>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default TaskList;\r\n","export default __webpack_public_path__ + \"static/media/logo.55fa443c.jpg\";","export default class Stores {\r\n    static TodoStore = 'todoStore';\r\n    static TaskStore = 'taskStore';\r\n    static AuthStore = 'authStore';\r\n  }\r\n\r\n  ","import React,{useState} from 'react'\r\nimport \"./index.css\";\r\nimport { Avatar, Image, Row, Col,Menu,Dropdown } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport logo from \"../assets/logo.jpg\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Icon } from \"@ant-design/compatible\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport Stores from \"../../Stores/StoreIdentifier\";\r\n\r\n\r\nfunction Header(props) {\r\n  const [isRedirect,setIsRedirect] = useState(false);\r\n\r\n  async function onClick(e){\r\n    console.log(e);\r\n    if(e.key === \"0\"){\r\n      // reset all data\r\n      await props.taskStore.resetData();\r\n      await props.taskStore.getAll();\r\n    }\r\n    else if(e.key === \"1\"){\r\n      localStorage.removeItem(\"TODOAPPJWTKEY\");\r\n      setIsRedirect(true);\r\n    }\r\n  }\r\n  \r\n  const menu = (\r\n    <Menu onClick={onClick}>\r\n      <Menu.Item icon={<Icon type=\"delete\" />} key=\"0\">Clear All Tasks</Menu.Item>\r\n      <Menu.Item icon={<Icon type=\"logout\" />} key=\"1\">Çıkış Yap</Menu.Item>\r\n    </Menu>\r\n  );\r\n  \r\n\r\n  if(isRedirect) return <Redirect to=\"/login\" />\r\n  return (\r\n    <div className=\"header-container\">\r\n      <Row>\r\n        <Col span={12} style={{display:'flex',alignItems:'center'}}>\r\n          <h2 style={{margin:0}}>CompanyName</h2>\r\n        </Col>\r\n        <Col span={12} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <Dropdown overlay={menu}>\r\n          <div className=\"user-container\">\r\n            <span>{props.name}</span>\r\n\r\n            <Avatar size={40} src={<Image preview={false} src={logo} />} />\r\n\r\n          </div>\r\n          </Dropdown>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default inject(Stores.TaskStore)(observer(Header));\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport { toJS } from \"mobx\";\r\nimport { Row, Col, Button,Tag } from \"antd\";\r\nimport { Icon } from \"@ant-design/compatible\";\r\n\r\nfunction Task(props) {\r\n  const { myDepartmentId, taskData, onEdit, onFinish,onReject } = props;\r\n\r\n\r\n  function _renderTag(){\r\n    switch(taskData.status){\r\n      case 0: return <Tag color=\"gold\">Pending</Tag>;\r\n      case 1: return <Tag color=\"green\">Completed</Tag>;\r\n      case 2: return <Tag color=\"magenta\">Rejected</Tag>;\r\n      default: return <Tag color=\"lime\">Loading...</Tag>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row className=\"task-item\">\r\n      <Col span={12}>\r\n        <h3>{taskData.title}</h3>\r\n        <span>{taskData.description}</span>\r\n      </Col>\r\n      <Col span={6} style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n        {_renderTag()}\r\n      </Col>\r\n      <Col span={6} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        {myDepartmentId === taskData.assignedDepartment ? (\r\n          <div>\r\n            <Button\r\n              disabled={taskData.status !== 0 ? true : false}\r\n              onClick={() => onReject(taskData.id)}\r\n              icon={<Icon type=\"delete\" />}\r\n              shape=\"circle\"\r\n              danger\r\n              style={{ width: 40, height: 40, marginRight: 10 }}\r\n            />            \r\n            <Button\r\n              disabled={taskData.status !== 0 ? true : false}\r\n              icon={<Icon type=\"check\" />}\r\n              shape=\"circle\"\r\n              onClick={() => onFinish(taskData.id)}\r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                backgroundColor: taskData.status === 1 ? \"rgba(183, 235, 143, 0.7)\" : \"#fff\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AddTaskForm from \"../../Components/AddTaskForm\";\r\nimport TaskList from \"../../Components/TaskList/TaskList\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport Header from \"../../Components/Header\";\r\nimport Stores from \"../../Stores/StoreIdentifier\";\r\nimport Task from \"../../Components/Task\";\r\nimport \"./index.css\";\r\nimport { Button, Card, Tabs, Spin } from \"antd\";\r\nimport { Icon } from \"@ant-design/compatible\";\r\nconst { TabPane } = Tabs;\r\n\r\nfunction TaskPage(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getSession();\r\n    getAllTasks();\r\n  }, []);\r\n\r\n  async function getAllTasks() {\r\n    await props.taskStore.getAll();\r\n  }\r\n\r\n  async function getSession() {\r\n    await props.authStore.getSessionInformation();\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 1500);\r\n  }\r\n\r\n  const addTask = async (task) => {\r\n    await props.taskStore.create({\r\n      title: task.title,\r\n      description: task.description,\r\n      assignedDepartment: +task.department,\r\n    });\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    props.taskStore.removeTask(id);\r\n  };\r\n\r\n  function onEdit(id) {\r\n    props.taskStore.selectTask(id);\r\n  }\r\n\r\n  async function onReject(id) {\r\n    await props.taskStore.rejectTask(id);\r\n  }\r\n\r\n  async function onFinish(id) {\r\n    await props.taskStore.completedTask(id);\r\n  }\r\n\r\n  function _renderTabs() {\r\n    if (isLoading) {\r\n      return (\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            height: 70,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Spin />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Tabs defaultActiveKey=\"1\">\r\n          <TabPane tab=\"All Tasks\" key=\"1\">\r\n            {props.taskStore.tasks.map((task, index) => (\r\n              <Task\r\n                key={\"all-\" + task.id}\r\n                onReject={onReject}\r\n                onFinish={onFinish}\r\n                onEdit={onEdit}\r\n                myDepartmentId={props.authStore.session.department}\r\n                taskData={task}\r\n              />\r\n            ))}\r\n          </TabPane>\r\n          <TabPane tab=\"Pending\" key=\"2\">\r\n            {props.taskStore.pendingTasks.map((task, index) => (\r\n              <Task\r\n                key={\"pending-\" + task.id}\r\n                onReject={onReject}\r\n                onFinish={onFinish}\r\n                onEdit={onEdit}\r\n                myDepartmentId={props.authStore.session.department}\r\n                taskData={task}\r\n              />\r\n            ))}\r\n          </TabPane>\r\n          <TabPane tab=\"Completed\" key=\"3\">\r\n            {props.taskStore.completedTasks.map((task, index) => (\r\n              <Task\r\n                key={\"completed-\" + task.id}\r\n                onReject={onReject}\r\n                onFinish={onFinish}\r\n                onEdit={onEdit}\r\n                myDepartmentId={props.authStore.session.department}\r\n                taskData={task}\r\n              />\r\n            ))}\r\n          </TabPane>\r\n          <TabPane tab=\"Rejected\" key=\"4\">\r\n            {props.taskStore.rejectedTasks.map((task, index) => (\r\n              <Task\r\n                key={\"rejected-\" + task.id}\r\n                onReject={onReject}\r\n                onFinish={onFinish}\r\n                onEdit={onEdit}\r\n                myDepartmentId={props.authStore.session.department}\r\n                taskData={task}\r\n              />\r\n            ))}\r\n          </TabPane>\r\n        </Tabs>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header name={props.authStore.session.name} />\r\n\r\n      <div className=\"taskList-container\">\r\n        <Card>{_renderTabs()}</Card>\r\n      </div>\r\n\r\n      <div className=\"add-container\">\r\n        <Button\r\n          onClick={() => setIsModalVisible(true)}\r\n          style={{ width: 50, height: 50 }}\r\n          icon={<Icon style={{ fontSize: 24 }} type=\"plus\" />}\r\n          shape=\"circle\"\r\n          type=\"primary\"\r\n        />\r\n      </div>\r\n\r\n      <AddTaskForm\r\n        isModalVisible={isModalVisible}\r\n        onCancel={() => setIsModalVisible(false)}\r\n        onSubmit={addTask}\r\n      ></AddTaskForm>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default inject(Stores.TaskStore, Stores.AuthStore)(observer(TaskPage));\r\n","import React,{useState} from 'react'\r\nimport './Login.css';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport Stores from '../../Stores/StoreIdentifier';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction LoginPage(props) {\r\n    const [email,setEmail] = useState(\"\");\r\n    const [isRedirect,setIsRedirect] = useState(false);\r\n\r\n    async function onSubmit(){\r\n        var res = await props.authStore.login({ email:email });\r\n        if(res !== undefined){\r\n            localStorage.setItem(\"TODOAPPJWTKEY\",res.payload.jwtToken);\r\n            setIsRedirect(true);\r\n        }   \r\n    }\r\n\r\n    if(isRedirect) return <Redirect to=\"/\" />\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login-triangle\"></div>\r\n            <h2 className=\"login-header\">Login</h2>\r\n            <div className=\"login-container\">\r\n                <p><input type=\"email\" onChange={(e) => setEmail(e.target.value)} value={email} placeholder=\"Email\"></input></p>\r\n                <p><input type=\"password\" placeholder=\"Password\"></input></p>\r\n                <p><input type=\"submit\" onClick={onSubmit} value=\"Log in\"></input></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inject(Stores.AuthStore)(observer(LoginPage));","import { makeAutoObservable } from \"mobx\"\r\n\r\n\r\nclass TodoStore {\r\n   testCounter = 0;\r\n   tasks = []; // task listesi\r\n\r\n   constructor() {\r\n    makeAutoObservable(this)\r\n}\r\n  \r\n    addCounter = async () => {\r\n      this.testCounter += 1;\r\n    };\r\n\r\n    addTask = async (newTask) => {\r\n      this.tasks.push(newTask);\r\n    }\r\n  }\r\n  \r\n  export default TodoStore;","import axios from 'axios';\r\nconst qs = require('qs');\r\n\r\nexport const http = axios.create({\r\n  baseURL: \"https://glacial-headland-22759.herokuapp.com/\",\r\n  timeout: 30000,\r\n  paramsSerializer: function(params) {\r\n    return qs.stringify(params, {\r\n      encode: false,\r\n    });\r\n  },\r\n});\r\n\r\nhttp.interceptors.request.use(\r\n  function(config) {\r\n\r\n    var jwtToken = localStorage.getItem(\"TODOAPPJWTKEY\");\r\n\r\n    if(jwtToken !== undefined && jwtToken !== null){\r\n      config.headers.common['Authorization'] = 'Bearer ' + jwtToken;\r\n    }\r\n\r\n    return config;\r\n  },\r\n  function(error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nhttp.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  error => {\r\n    return undefined;\r\n  }\r\n);","import {http} from '../httpService';\r\n\r\nclass TaskService {\r\n\r\n    async create(taskInput) {\r\n      let result = await http.post('/api/task', taskInput);\r\n      if(result === undefined) return result;\r\n      return result.data;\r\n    }\r\n\r\n    async getAll() {\r\n      let result = await http.get('/api/task');\r\n      if(result === undefined) return result;\r\n      return result.data;\r\n    }\r\n\r\n    async completedTask(id){\r\n      let result = await http.get('/api/task/complete/' + id);\r\n      if(result === undefined) return result;\r\n      return result.data;\r\n    }\r\n\r\n    async rejectTask(id){\r\n      let result = await http.get('/api/task/reject/' + id);\r\n      if(result === undefined) return result;\r\n      return result.data;\r\n    }\r\n\r\n    async resetData(){\r\n      let result = await http.get('/api/task/reset-data/');\r\n      if(result === undefined) return result;\r\n      return result.data;\r\n    }\r\n\r\n}\r\n  \r\nexport default new TaskService();","import { makeAutoObservable } from \"mobx\";\r\nimport taskService from \"../Services/taskService/taskService\";\r\n\r\nclass TaskStore {\r\n  tasks = []; // task listesi\r\n  completedTasks = [];\r\n  rejectedTasks = [];\r\n  pendingTasks = [];\r\n  selectedTask = {\r\n    id: 0,\r\n    title: \"\",\r\n    description: \"\",\r\n    status: 0,\r\n    assignedDepartment: 0,\r\n    user: {\r\n      name: \"\",\r\n      id: 0,\r\n    },\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  async resetData() {\r\n    await taskService.resetData();\r\n    this.tasks = [];\r\n    this.taskGroups();\r\n  }\r\n\r\n  selectTask(id) {\r\n    var selectedTask = this.tasks.find((x) => x.id === id);\r\n    if (selectedTask !== undefined) {\r\n      this.selectTask = selectedTask;\r\n    }\r\n  }\r\n\r\n  async rejectTask(id) {\r\n    var res = await taskService.rejectTask(id);\r\n\r\n    var findTaskIndex = this.tasks.findIndex((x) => x.id === id);\r\n    if (findTaskIndex !== -1) {\r\n      var preData = Array.from(this.tasks);\r\n      preData[findTaskIndex].status = 2;\r\n      this.tasks = preData;\r\n    }\r\n    this.taskGroups();\r\n  }\r\n\r\n  async completedTask(id) {\r\n    var res = await taskService.completedTask(id);\r\n\r\n    var findTaskIndex = this.tasks.findIndex((x) => x.id === id);\r\n    if (findTaskIndex !== -1) {\r\n      var preData = Array.from(this.tasks);\r\n      preData[findTaskIndex].status = 1;\r\n      this.tasks = preData;\r\n    }\r\n    this.taskGroups();\r\n  }\r\n\r\n  async create(taskInput) {\r\n    var res = await taskService.create(taskInput);\r\n    if (res !== undefined) {\r\n      this.tasks.push(res.payload);\r\n    }\r\n    this.taskGroups();\r\n  }\r\n\r\n  async getAll() {\r\n    var res = await taskService.getAll();\r\n    if (res !== undefined) {\r\n      this.tasks = res.payload;\r\n      console.log(res.pasyload);\r\n    }\r\n    this.taskGroups();\r\n  }\r\n\r\n  taskGroups() {\r\n    this.completedTasks = [];\r\n    this.rejectedTasks = [];\r\n    this.pendingTasks = [];\r\n    this.tasks.forEach((item) => {\r\n      switch (item.status) {\r\n        case 0:\r\n          this.pendingTasks.push(item);\r\n          break;\r\n        case 1:\r\n          this.completedTasks.push(item);\r\n          break;\r\n        case 2:\r\n          this.rejectedTasks.push(item);\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  addTask = (task) => {\r\n    this.tasks.push(task);\r\n  };\r\n\r\n  removeTask = (id) => {\r\n    const removeArr = [...this.tasks].filter((todo) => todo.id !== id);\r\n    this.tasks = removeArr;\r\n  };\r\n}\r\n\r\nexport default TaskStore;\r\n","\r\nimport {http} from '../httpService';\r\n\r\nclass AuthService {\r\n\r\n    async login(loginInput) {\r\n      let result = await http.post('/api/auth/login', loginInput);\r\n      if(result === undefined) return result;\r\n      return result.data;\r\n    }\r\n\r\n    async getSessionInformation() {\r\n      let result = await http.get('/api/auth/me');\r\n      if(result === undefined) return result;\r\n      return result.data;\r\n    }\r\n\r\n  }\r\n  \r\n  export default new AuthService();\r\n  ","import { makeAutoObservable } from \"mobx\"\r\nimport authService from '../Services/authService/authService';\r\n\r\nclass AuthStore {\r\n   session = {\r\n    department: 0,\r\n    email: \"\",\r\n    id:0,\r\n    name: \"\",\r\n    title:\"\"\r\n   }\r\n   \r\n   constructor() {\r\n    makeAutoObservable(this)\r\n   }\r\n   \r\n    async login(loginInput){\r\n        var res = await authService.login(loginInput);\r\n        return res;\r\n    }\r\n\r\n    async getSessionInformation(){\r\n      var res = await authService.getSessionInformation();\r\n      if(res !== undefined){\r\n        this.session = res.payload;\r\n      }\r\n    }\r\n  }\r\n  \r\n  export default AuthStore;","import TaskPage from \"./Pages/Task/TaskPage\";\nimport LoginPage from './Pages/Login/LoginPage';\nimport { Provider } from 'mobx-react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport initializeStores from './Stores/StoreInitializer';\n\n\nfunction App() {\n\n  const stores = initializeStores();\n  return (\n    <Provider {...stores}>\n\n\n        <Router>\n\n        <Switch>\n\n          <PublicRoute path=\"/login\">\n            <LoginPage />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/\">\n            <TaskPage />\n          </PrivateRoute>  \n\n        </Switch>\n\n      </Router>\n\n\n    </Provider>\n  );\n}\n\n\n\n\nfunction PrivateRoute ({ children, ...rest }) {\n  return (\n    <Route {...rest} render={() => {\n      return localStorage.getItem(\"TODOAPPJWTKEY\") !== null\n        ? children\n        : <Redirect to='/login' />\n    }} />\n  )\n}\n\nfunction PublicRoute ({ children, ...rest }) {\n  return (\n    <Route {...rest} render={() => {\n      return localStorage.getItem(\"TODOAPPJWTKEY\") === null\n        ? children\n        : <Redirect to='/' />\n    }} />\n  )\n}\n\nexport default App;\n","import TodoStore from './todoStore';\r\nimport TaskStore from './taskStore';\r\nimport AuthStore from './authStore';\r\n\r\nexport default function initializeStores() {\r\n    return {\r\n      todoStore:new TodoStore(),\r\n      taskStore:new TaskStore(),\r\n      authStore:new AuthStore()\r\n    }\r\n  }\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}